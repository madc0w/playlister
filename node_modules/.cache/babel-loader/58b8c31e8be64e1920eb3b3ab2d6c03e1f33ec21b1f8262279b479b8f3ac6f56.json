{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  id: \"right-panel\"\n};\nconst _hoisted_3 = {\n  id: \"input-panel\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    id: \"left-panel\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", null, \"Playlist description:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.playlistDescription = $event),\n    placeholder: \"monkey songs\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.playlistDescription]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", null, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.genre = $event),\n    placeholder: \"rock and/or roll\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.genre]])]), $data.isInProgress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Working...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.go && $options.go(...args))\n  }, \"GO\")]))]), _cache[5] || (_cache[5] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    id: \"player-panel\"\n  }, null, -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","$event","$data","playlistDescription","placeholder","type","genre","isInProgress","_hoisted_4","_hoisted_5","onClick","args","$options","go"],"sources":["C:\\Users\\mad\\git\\playlister\\src\\App.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<div id=\"left-panel\"></div>\r\n\t\t<div id=\"right-panel\">\r\n\t\t\t<div id=\"input-panel\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>Playlist description:</div>\r\n\t\t\t\t\t<textarea v-model=\"playlistDescription\" placeholder=\"monkey songs\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>Genre:</div>\r\n\t\t\t\t\t<input type=\"text\" v-model=\"genre\" placeholder=\"rock and/or roll\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isInProgress\">Working...</div>\r\n\t\t\t\t<div v-else>\r\n\t\t\t\t\t<button @click=\"go\">GO</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div id=\"player-panel\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\nconst OpenAI = require('openai');\r\n\r\nexport default {\r\n\tname: 'App',\r\n\r\n\tcomponents: {},\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tplaylistDescription: null,\r\n\t\t\tgenre: null,\r\n\t\t\tisInProgress: false,\r\n\t\t};\r\n\t},\r\n\r\n\tmethods: {\r\n\t\tasync go() {\r\n\t\t\tthis.isInProgress = true;\r\n\t\t\tawait this.getPlaylist();\r\n\t\t\t// const videoUrls = await searchYouTube(query);\r\n\t\t\t// console.log('videoUrls', videoUrls);\r\n\t\t\tthis.isInProgress = false;\r\n\t\t},\r\n\r\n\t\tasync searchYouTube(query, maxResults = 4) {\r\n\t\t\tconst apiUrl = 'https://www.googleapis.com/youtube/v3/search';\r\n\r\n\t\t\tconst key = 'AIza' + 'SyB728y' + 'Fdfqjj1' + 'ORnX6v' + 'deTD2L' + 'Ct5DObRBQ';\r\n\t\t\tconst response = await axios.get(apiUrl, {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tpart: 'snippet',\r\n\t\t\t\t\tq: query,\r\n\t\t\t\t\ttype: 'video',\r\n\t\t\t\t\tmaxResults: maxResults,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// Extract video URLs from the response\r\n\t\t\tconst videos = response.data.items.map(item => {\r\n\t\t\t\tconst videoId = item.id.videoId;\r\n\t\t\t\treturn `https://www.youtube.com/watch?v=${videoId}`;\r\n\t\t\t});\r\n\r\n\t\t\treturn videos;\r\n\t\t},\r\n\r\n\t\tasync getPlaylist() {\r\n\t\t\tconst key =\r\n\t\t\t\t'sk' +\r\n\t\t\t\t'-balloonary-app' +\r\n\t\t\t\t'-PJkym0CI' +\r\n\t\t\t\t'aSTq87kt3lg' +\r\n\t\t\t\t'eT3BlbkFJ' +\r\n\t\t\t\t'iNvlkhLN' +\r\n\t\t\t\t'j6cdFD8' +\r\n\t\t\t\t'bseBR';\r\n\t\t\tconst openai = new OpenAI({ apiKey: key, dangerouslyAllowBrowser: true });\r\n\r\n\t\t\tconst numTracks = 8;\r\n\t\t\tlet prompt =\r\n\t\t\t\t`Build a playlist of ${numTracks} tracks. The playlist description is:\\n` +\r\n\t\t\t\tthis.playlistDescription +\r\n\t\t\t\t'\\n';\r\n\t\t\tif (this.genre) {\r\n\t\t\t\tprompt += 'The genre of the tracks in this list is:\\n' + this.genre + '\\n';\r\n\t\t\t}\r\n\t\t\tprompt +=\r\n\t\t\t\t'Output a JSON array where each entry is an object having the attributes \"title\" and \"artist\". Produce only JSON, no prefix or suffix.';\r\n\r\n\t\t\tconst params = {\r\n\t\t\t\tmodel: 'gpt-4o',\r\n\t\t\t\t// user: ,\r\n\t\t\t\tmessages: [\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \trole: 'system',\r\n\t\t\t\t\t// \tcontent: 'You are an expert',\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trole: 'user',\r\n\t\t\t\t\t\tcontent: prompt,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\t// response_format: {\r\n\t\t\t\t// \ttype: 'json_schema',\r\n\t\t\t\t// \tjson_schema: {\r\n\t\t\t\t// \t\tname: 'json_response',\r\n\t\t\t\t// \t\tstrict: true,\r\n\t\t\t\t// \t\tschema: {\r\n\t\t\t\t// \t\t\ttype: 'object',\r\n\t\t\t\t// \t\t\tproperties,\r\n\t\t\t\t// \t\t\trequired: Object.keys(properties),\r\n\t\t\t\t// \t\t\tadditionalProperties: false,\r\n\t\t\t\t// \t\t},\r\n\t\t\t\t// \t},\r\n\t\t\t\t// },\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await openai.chat.completions.create(params);\r\n\t\t\tconst json = response.choices[0].message.content;\r\n\t\t\tconsole.log('json', json);\r\n\t\t\tJSON.parse(JSON);\r\n\t\t},\r\n\t},\r\n\r\n\tasync created() {},\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\tcolor: #2c3e50;\r\n\tdisplay: flex; /* Use flex layout */\r\n\tmin-height: 100vh; /* Optional: make container fill at least the viewport height */\r\n}\r\n\r\n#left-panel {\r\n\twidth: 200px;\r\n\tbackground-color: #f2f2f2;\r\n\tpadding: 1rem;\r\n}\r\n\r\n#right-panel {\r\n\tflex-grow: 1; /* Take remaining space */\r\n\tbackground-color: #ffffff;\r\n\tpadding: 1rem;\r\n}\r\n\r\n#input-panel textarea {\r\n\twidth: 400px;\r\n}\r\n\r\n#input-panel input {\r\n\twidth: 400px;\r\n}\r\n\r\nbutton {\r\n\tbackground-color: crimson;\r\n\tcolor: white;\r\n\tmin-width: 80px;\r\n\tmin-height: 24px;\r\n\tmargin: 4px;\r\n\tborder-radius: 6px;\r\n\tcursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;EACMA,EAAE,EAAC;AAAK;;EAEPA,EAAE,EAAC;AAAa;;EACfA,EAAE,EAAC;AAAa;;EAJxBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACCC,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBLC,mBAAA,CAA2B;IAAtBJ,EAAE,EAAC;EAAY,6BACpBI,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBLD,mBAAA,CAaM,OAbNE,UAaM,GAZLF,mBAAA,CAGM,c,0BAFLA,mBAAA,CAAgC,aAA3B,uBAAqB,sB,gBAC1BA,mBAAA,CAAqE;IAP1E,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOwBC,KAAA,CAAAC,mBAAmB,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAjCF,KAAA,CAAAC,mBAAmB,E,KAEvCN,mBAAA,CAGM,c,0BAFLA,mBAAA,CAAiB,aAAZ,QAAM,sB,gBACXA,mBAAA,CAAoE;IAA7DQ,IAAI,EAAC,MAAM;IAXvB,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWiCC,KAAA,CAAAI,KAAK,GAAAL,MAAA;IAAEG,WAAW,EAAC;iDAAnBF,KAAA,CAAAI,KAAK,E,KAEvBJ,KAAA,CAAAK,YAAY,I,cAAvBZ,mBAAA,CAAyC,OAb7Ca,UAAA,EAa6B,YAAU,M,cACnCb,mBAAA,CAEM,OAhBVc,UAAA,GAeKZ,mBAAA,CAA+B;IAAtBa,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAW,IAAA,KAAEC,QAAA,CAAAC,EAAA,IAAAD,QAAA,CAAAC,EAAA,IAAAF,IAAA,CAAE;KAAE,IAAE,E,gCAGxBd,mBAAA,CAAM,sC,0BACNA,mBAAA,CAA6B;IAAxBJ,EAAE,EAAC;EAAc,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}