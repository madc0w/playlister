{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nconst axios = require('axios');\nconst OpenAI = require('openai');\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      playlistDescription: null,\n      genre: null,\n      isInProgress: false\n    };\n  },\n  methods: {\n    async go() {\n      this.isInProgress = true;\n      await this.getPlaylist();\n      // const videoUrls = await searchYouTube(query);\n      // console.log('videoUrls', videoUrls);\n      this.isInProgress = false;\n    },\n    async searchYouTube(query, maxResults = 4) {\n      const apiUrl = 'https://www.googleapis.com/youtube/v3/search';\n      const key = 'AIza' + 'SyB728y' + 'Fdfqjj1' + 'ORnX6v' + 'deTD2L' + 'Ct5DObRBQ';\n      const response = await axios.get(apiUrl, {\n        params: {\n          part: 'snippet',\n          q: query,\n          type: 'video',\n          maxResults: maxResults,\n          key\n        }\n      });\n\n      // Extract video URLs from the response\n      const videos = response.data.items.map(item => {\n        const videoId = item.id.videoId;\n        return `https://www.youtube.com/watch?v=${videoId}`;\n      });\n      return videos;\n    },\n    async getPlaylist() {\n      const key = 'sk' + '-balloonary-app' + '-PJkym0CI' + 'aSTq87kt3lg' + 'eT3BlbkFJ' + 'iNvlkhLN' + 'j6cdFD8' + 'bseBR';\n      const openai = new OpenAI({\n        apiKey: key,\n        dangerouslyAllowBrowser: true\n      });\n      const prompt = this.playlistDescription;\n      const params = {\n        model: 'gpt-4o',\n        // user: ,\n        messages: [\n        // {\n        // \trole: 'system',\n        // \tcontent: 'You are an expert',\n        // },\n        {\n          role: 'user',\n          content: prompt\n        }],\n        response_format: {\n          type: 'json_schema',\n          json_schema: {\n            name: type?.replace(/[^a-zA-Z0-9_-]/g, '_') || 'json_response',\n            strict: true,\n            schema: {\n              type: 'object',\n              properties,\n              required: Object.keys(properties),\n              additionalProperties: false\n            }\n          }\n        }\n      };\n      const response = await openai.chat.completions.create(params);\n      console.log('response', response.choices[0].message.content);\n    }\n  },\n  async created() {}\n};","map":{"version":3,"names":["axios","require","OpenAI","name","components","data","playlistDescription","genre","isInProgress","methods","go","getPlaylist","searchYouTube","query","maxResults","apiUrl","key","response","get","params","part","q","type","videos","items","map","item","videoId","id","openai","apiKey","dangerouslyAllowBrowser","prompt","model","messages","role","content","response_format","json_schema","replace","strict","schema","properties","required","Object","keys","additionalProperties","chat","completions","create","console","log","choices","message","created"],"sources":["C:\\Users\\mad\\git\\playlister\\src\\App.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\">\r\n\t\t<div id=\"left-panel\"></div>\r\n\t\t<div id=\"right-panel\">\r\n\t\t\t<div id=\"input-panel\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>Playlist description:</div>\r\n\t\t\t\t\t<textarea v-model=\"playlistDescription\" placeholder=\"monkey songs\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>Genre:</div>\r\n\t\t\t\t\t<input type=\"text\" v-model=\"genre\" placeholder=\"rock and/or roll\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"isInProgress\">Working...</div>\r\n\t\t\t\t<div v-else>\r\n\t\t\t\t\t<button @click=\"go\">GO</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div id=\"player-panel\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\nconst OpenAI = require('openai');\r\n\r\nexport default {\r\n\tname: 'App',\r\n\r\n\tcomponents: {},\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tplaylistDescription: null,\r\n\t\t\tgenre: null,\r\n\t\t\tisInProgress: false,\r\n\t\t};\r\n\t},\r\n\r\n\tmethods: {\r\n\t\tasync go() {\r\n\t\t\tthis.isInProgress = true;\r\n\t\t\tawait this.getPlaylist();\r\n\t\t\t// const videoUrls = await searchYouTube(query);\r\n\t\t\t// console.log('videoUrls', videoUrls);\r\n\t\t\tthis.isInProgress = false;\r\n\t\t},\r\n\r\n\t\tasync searchYouTube(query, maxResults = 4) {\r\n\t\t\tconst apiUrl = 'https://www.googleapis.com/youtube/v3/search';\r\n\r\n\t\t\tconst key = 'AIza' + 'SyB728y' + 'Fdfqjj1' + 'ORnX6v' + 'deTD2L' + 'Ct5DObRBQ';\r\n\t\t\tconst response = await axios.get(apiUrl, {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tpart: 'snippet',\r\n\t\t\t\t\tq: query,\r\n\t\t\t\t\ttype: 'video',\r\n\t\t\t\t\tmaxResults: maxResults,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// Extract video URLs from the response\r\n\t\t\tconst videos = response.data.items.map(item => {\r\n\t\t\t\tconst videoId = item.id.videoId;\r\n\t\t\t\treturn `https://www.youtube.com/watch?v=${videoId}`;\r\n\t\t\t});\r\n\r\n\t\t\treturn videos;\r\n\t\t},\r\n\r\n\t\tasync getPlaylist() {\r\n\t\t\tconst key =\r\n\t\t\t\t'sk' +\r\n\t\t\t\t'-balloonary-app' +\r\n\t\t\t\t'-PJkym0CI' +\r\n\t\t\t\t'aSTq87kt3lg' +\r\n\t\t\t\t'eT3BlbkFJ' +\r\n\t\t\t\t'iNvlkhLN' +\r\n\t\t\t\t'j6cdFD8' +\r\n\t\t\t\t'bseBR';\r\n\t\t\tconst openai = new OpenAI({ apiKey: key, dangerouslyAllowBrowser: true });\r\n\r\n\t\t\tconst prompt = this.playlistDescription;\r\n\r\n\t\t\tconst params = {\r\n\t\t\t\tmodel: 'gpt-4o',\r\n\t\t\t\t// user: ,\r\n\t\t\t\tmessages: [\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \trole: 'system',\r\n\t\t\t\t\t// \tcontent: 'You are an expert',\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trole: 'user',\r\n\t\t\t\t\t\tcontent: prompt,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tresponse_format: {\r\n\t\t\t\t\ttype: 'json_schema',\r\n\t\t\t\t\tjson_schema: {\r\n\t\t\t\t\t\tname: type?.replace(/[^a-zA-Z0-9_-]/g, '_') || 'json_response',\r\n\t\t\t\t\t\tstrict: true,\r\n\t\t\t\t\t\tschema: {\r\n\t\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\t\tproperties,\r\n\t\t\t\t\t\t\trequired: Object.keys(properties),\r\n\t\t\t\t\t\t\tadditionalProperties: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await openai.chat.completions.create(params);\r\n\t\t\tconsole.log('response', response.choices[0].message.content);\r\n\t\t},\r\n\t},\r\n\r\n\tasync created() {},\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\tcolor: #2c3e50;\r\n\tdisplay: flex; /* Use flex layout */\r\n\tmin-height: 100vh; /* Optional: make container fill at least the viewport height */\r\n}\r\n\r\n#left-panel {\r\n\twidth: 200px;\r\n\tbackground-color: #f2f2f2;\r\n\tpadding: 1rem;\r\n}\r\n\r\n#right-panel {\r\n\tflex-grow: 1; /* Take remaining space */\r\n\tbackground-color: #ffffff;\r\n\tpadding: 1rem;\r\n}\r\n\r\n#input-panel textarea {\r\n\twidth: 400px;\r\n}\r\n\r\n#input-panel input {\r\n\twidth: 400px;\r\n}\r\n\r\nbutton {\r\n\tbackground-color: crimson;\r\n\tcolor: white;\r\n\tmin-width: 80px;\r\n\tmin-height: 24px;\r\n\tmargin: 4px;\r\n\tborder-radius: 6px;\r\n\tcursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";AAyBA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,MAAK,GAAID,OAAO,CAAC,QAAQ,CAAC;AAEhC,eAAe;EACdE,IAAI,EAAE,KAAK;EAEXC,UAAU,EAAE,CAAC,CAAC;EAEdC,IAAIA,CAAA,EAAG;IACN,OAAO;MACNC,mBAAmB,EAAE,IAAI;MACzBC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE;IACf,CAAC;EACF,CAAC;EAEDC,OAAO,EAAE;IACR,MAAMC,EAAEA,CAAA,EAAG;MACV,IAAI,CAACF,YAAW,GAAI,IAAI;MACxB,MAAM,IAAI,CAACG,WAAW,CAAC,CAAC;MACxB;MACA;MACA,IAAI,CAACH,YAAW,GAAI,KAAK;IAC1B,CAAC;IAED,MAAMI,aAAaA,CAACC,KAAK,EAAEC,UAAS,GAAI,CAAC,EAAE;MAC1C,MAAMC,MAAK,GAAI,8CAA8C;MAE7D,MAAMC,GAAE,GAAI,MAAK,GAAI,SAAQ,GAAI,SAAQ,GAAI,QAAO,GAAI,QAAO,GAAI,WAAW;MAC9E,MAAMC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAACH,MAAM,EAAE;QACxCI,MAAM,EAAE;UACPC,IAAI,EAAE,SAAS;UACfC,CAAC,EAAER,KAAK;UACRS,IAAI,EAAE,OAAO;UACbR,UAAU,EAAEA,UAAU;UACtBE;QACD;MACD,CAAC,CAAC;;MAEF;MACA,MAAMO,MAAK,GAAIN,QAAQ,CAACZ,IAAI,CAACmB,KAAK,CAACC,GAAG,CAACC,IAAG,IAAK;QAC9C,MAAMC,OAAM,GAAID,IAAI,CAACE,EAAE,CAACD,OAAO;QAC/B,OAAO,mCAAmCA,OAAO,EAAE;MACpD,CAAC,CAAC;MAEF,OAAOJ,MAAM;IACd,CAAC;IAED,MAAMZ,WAAWA,CAAA,EAAG;MACnB,MAAMK,GAAE,GACP,IAAG,GACH,iBAAgB,GAChB,WAAU,GACV,aAAY,GACZ,WAAU,GACV,UAAS,GACT,SAAQ,GACR,OAAO;MACR,MAAMa,MAAK,GAAI,IAAI3B,MAAM,CAAC;QAAE4B,MAAM,EAAEd,GAAG;QAAEe,uBAAuB,EAAE;MAAK,CAAC,CAAC;MAEzE,MAAMC,MAAK,GAAI,IAAI,CAAC1B,mBAAmB;MAEvC,MAAMa,MAAK,GAAI;QACdc,KAAK,EAAE,QAAQ;QACf;QACAC,QAAQ,EAAE;QACT;QACA;QACA;QACA;QACA;UACCC,IAAI,EAAE,MAAM;UACZC,OAAO,EAAEJ;QACV,CAAC,CACD;QACDK,eAAe,EAAE;UAChBf,IAAI,EAAE,aAAa;UACnBgB,WAAW,EAAE;YACZnC,IAAI,EAAEmB,IAAI,EAAEiB,OAAO,CAAC,iBAAiB,EAAE,GAAG,KAAK,eAAe;YAC9DC,MAAM,EAAE,IAAI;YACZC,MAAM,EAAE;cACPnB,IAAI,EAAE,QAAQ;cACdoB,UAAU;cACVC,QAAQ,EAAEC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC;cACjCI,oBAAoB,EAAE;YACvB;UACD;QACD;MACD,CAAC;MAED,MAAM7B,QAAO,GAAI,MAAMY,MAAM,CAACkB,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC9B,MAAM,CAAC;MAC7D+B,OAAO,CAACC,GAAG,CAAC,UAAU,EAAElC,QAAQ,CAACmC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACjB,OAAO,CAAC;IAC7D;EACD,CAAC;EAED,MAAMkB,OAAOA,CAAA,EAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}